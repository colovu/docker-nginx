# /etc/nginx/nginx.conf

# 针对当前已使用 nginx 用户的 Docker 镜像使用时，不需要定义用户
#user nginx;

# 关闭守护进程模式。如果设置为后台守护进程模式，容器在启动应用后会退出
daemon off;

# 根据 CPU 核心数设置进程数量
worker_processes auto;

# 手动设置进程数量。子进程个数最好跟CPU的核心数一样
#worker_processes 8;
# 手动绑定子进程与 CPU 核心，避免进程切换造成性能损失
#worker_cpu_affinity 0001 0010 0100 1000 0011 0110 1100 1001;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# 配置默认的日志输出方式。可以为日志文件或标准输出设备，日志文件路径固定不可修改
# 输出级别：notice / info / warn / error / 为空
#error_log /var/log/nginx/error.log warn;
#error_log /dev/stdout warn;

# 包含配置文件，以加载动态模块
include /usr/local/nginx/modules/*.conf;

# 设置PID文件路径为对应的子目录
pid /var/run/nginx/nginx.pid;

worker_rlimit_nofile 32767;

events {
	use epoll;

	# 设置一个进程可以打开的最大并发链接数量
	worker_connections 10240;
}

http {
	# 如果启用Ruby支持，需要编译支持Ruby的版本，在这里配置启用对应版本的Passenger
	#passenger_root /usr/local/rvm/gems/ruby-2.1.3/gems/passenger-4.0.57;
	#passenger_ruby /usr/local/rvm/gems/ruby-2.1.3/wrappers/ruby;

	# 包含扩展名与类型映射定义 MIME 文件，并定义默认使用的类型
	include /srv/conf/nginx/mime.types;
	default_type application/octet-stream;
	charset UTF-8;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write().
	sendfile on;

	# Don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames.
	#tcp_nopush on;

	# Don't tell nginx version to clients.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable.
	client_max_body_size 1024m;

	# Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 208.67.222.222 208.67.220.220;

	# Timeout for keep-alive connections. Server will close connections after
	# this time.
	keepalive_timeout 65;

	proxy_buffer_size 128k;
    proxy_buffering on;
    proxy_buffers 4 64k;
    proxy_busy_buffers_size 128k;
    proxy_max_temp_file_size 1024m;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# Path of the file with Diffie-Hellman parameters for EDH ciphers.
	#ssl_dhparam /etc/ssl/nginx/dh2048.pem;

	# Specifies that our cipher suits should be preferred over client ciphers.
	ssl_prefer_server_ciphers on;

	# Enables a shared SSL cache with size that can hold around 8000 sessions.
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 5m;

	# 启用或禁用应答信息的压缩传输
	gzip off;

	# Set the Vary HTTP header as defined in the RFC 2616.
	gzip_vary on;

	gzip_disable "msie6";
	gzip_proxied any;
	gzip_min_length 1000;
	gzip_comp_level 6;
	gzip_buffers 8 16k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css text/xml application/javascript application/json application/rss+xml;

	# Enable checking the existence of precompressed files.
	#gzip_static on;

	# 定义日志格式
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	# 设置日志输出的路径、格式
	#access_log /var/log/nginx/access.log main;
	#error_log  /var/log/nginx/error.log warn;
	access_log /dev/stdout main;
	error_log  /dev/stdout warn;
	
	# 关闭日志输出，提升性能
	#access_log /dev/null;
	#error_log /dev/null;

	# 包含虚拟服务器定义配置文件
	include /srv/conf/nginx/conf.d/*.conf;
}

# 包含其它类型服务配置文件，如 RTMP
include /srv/conf/nginx/services/*.conf;
